/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manage;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Ihsan
 */
public class App extends javax.swing.JFrame {

    private List<Serialisasi<String>> daftarNota = new ArrayList<>();
    private DefaultTableModel model;

    public App() {
        initComponents();
        LanguageManager.setLanguage("id");
        model = new DefaultTableModel(new Object[]{"ID", "Tanggal", "Isi Nota", "Harga"}, 0);
        jtable1.setModel(model);
        loadData();
      
    }

    private String generateId() {
        return "N" + System.currentTimeMillis();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        harga = new javax.swing.JLabel();
        tanggal = new javax.swing.JLabel();
        nota = new javax.swing.JLabel();
        txtTanggal = new javax.swing.JTextField();
        txtIsi = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        Tambah = new javax.swing.JButton();
        cmbBahasa = new javax.swing.JComboBox<>();
        bahasa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable1 = new javax.swing.JTable();
        Simpan = new javax.swing.JButton();
        Load = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        title.setText("Aplikasi Pengelola Nota");

        harga.setText("Harga");

        tanggal.setText("Tanggal");

        nota.setText("Isi Nota");

        Tambah.setText("Tambah");
        Tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahActionPerformed(evt);
            }
        });

        cmbBahasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indonesia", "English" }));
        cmbBahasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBahasaActionPerformed(evt);
            }
        });

        bahasa.setText("Pilih Bahasa");

        jtable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Tanggal", "Isi Nota", "Harga"
            }
        ));
        jScrollPane1.setViewportView(jtable1);

        Simpan.setText("Simpan ");
        Simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanActionPerformed(evt);
            }
        });

        Load.setText("Load");
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(749, 749, 749)
                        .addComponent(bahasa)
                        .addGap(6, 6, 6)
                        .addComponent(cmbBahasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nota, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIsi, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Simpan)))))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(refresh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Load, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                                .addGap(110, 110, 110)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(title)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(bahasa))
                    .addComponent(cmbBahasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tanggal)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nota)
                            .addComponent(txtIsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refresh))
                        .addGap(18, 18, 18)
                        .addComponent(harga))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(55, 55, 55)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Load)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tambah)
                    .addComponent(Simpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 944, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahActionPerformed
    String tanggal = txtTanggal.getText();
    String isiNota = txtIsi.getText();
    String harga = txtHarga.getText();

    try {
        SimpleDateFormat sdfInput = new SimpleDateFormat("dd/MM/yyyy");
        Date date = sdfInput.parse(txtTanggal.getText());

        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
        Connection conn = Koneksi.getConnection();
        String sql = "INSERT INTO nota (tanggal, isi_nota, harga) VALUES (?, ?, ?)";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, tanggal);
        ps.setString(2, isiNota);
        ps.setDouble(3, Double.parseDouble(harga));
        ps.executeUpdate();

        // Tambahkan ke daftarNota agar bisa diserialisasi
        Serialisasi<String> nota = new Serialisasi<>(
            generateId(), tanggal, isiNota, harga
        );
        daftarNota.add(nota);
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan.");
        loadData(); // Refresh tampilan tabel dari database
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
    }

    }//GEN-LAST:event_TambahActionPerformed

    private void SimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanActionPerformed
        new Thread(() -> {
            try (FileOutputStream fos = new FileOutputStream("nota.dat"); CipherOutputStream cos = CryptoUtils.encryptStream(fos); ObjectOutputStream oos = new ObjectOutputStream(cos)) {
                oos.writeObject(daftarNota);
                SwingUtilities.invokeLater(()
                        -> JOptionPane.showMessageDialog(this, LanguageManager.get("save.success"))
                );
            } catch (Exception ex) {
                ex.printStackTrace();
                SwingUtilities.invokeLater(()
                        -> JOptionPane.showMessageDialog(this, LanguageManager.get("save.fail"))
                );
            }
        }).start();
    }//GEN-LAST:event_SimpanActionPerformed

    private void cmbBahasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBahasaActionPerformed
        String pilih = (String) cmbBahasa.getSelectedItem();
        if (pilih.equals("Indonesia")) {
            LanguageManager.setLanguage("id");
        } else {
            LanguageManager.setLanguage("en");
        }
        updateUIStrings();
    }//GEN-LAST:event_cmbBahasaActionPerformed

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
     new Thread(() -> {
        try (FileInputStream fis = new FileInputStream("nota.dat");
             CipherInputStream cis = CryptoUtils.decryptStream(fis);
             ObjectInputStream ois = new ObjectInputStream(cis)) {
                 
            daftarNota = (List<Serialisasi<String>>) ois.readObject();
            SwingUtilities.invokeLater(this::updateTable);

        } catch (Exception ex) {
            ex.printStackTrace();
            SwingUtilities.invokeLater(() ->
                JOptionPane.showMessageDialog(this, LanguageManager.get("load.fail"))
            );
        }
    }).start();

    }//GEN-LAST:event_LoadActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
     loadData();
    }//GEN-LAST:event_refreshActionPerformed
private void loadData() {
    model.setRowCount(0); // Bersihkan tabel terlebih dahulu
    try {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT * FROM nota";
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        while (rs.next()) {
            String id = rs.getString("id"); // jika kolom ini ada
            String tanggal = rs.getString("tanggal");
            String isiNota = rs.getString("isi_nota");
            String harga = rs.getString("harga");
            model.addRow(new Object[]{id, tanggal, isiNota, harga});
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
    }
}



    private void updateTable() {
        model.setRowCount(0);
        for (Serialisasi<String> n : daftarNota) {
            model.addRow(new Object[]{n.getId(), n.getTanggal(), n.getIsi(), n.getHarga()});
        }
    }

    private void updateUIStrings() {
        setTitle(LanguageManager.get("app.title"));
        title.setText(LanguageManager.get("app.title"));
        harga.setText(LanguageManager.get("app.harga"));
        tanggal.setText(LanguageManager.get("app.tanggal"));
        nota.setText(LanguageManager.get("app.nota"));
        bahasa.setText(LanguageManager.get("app.bahasa"));
        Tambah.setText(LanguageManager.get("btn.Tambah"));
        Simpan.setText(LanguageManager.get("btn.Simpan"));
        Load.setText(LanguageManager.get("btn.Load"));
        refresh.setText(LanguageManager.get("btn.refresh"));
        updateTableHeaders();
    }

    private void updateTableHeaders() {
        jtable1.getColumnModel().getColumn(0).setHeaderValue(LanguageManager.get("jtable1.header.ID"));
        jtable1.getColumnModel().getColumn(1).setHeaderValue(LanguageManager.get("jtable1.header.Tanggal"));
        jtable1.getColumnModel().getColumn(2).setHeaderValue(LanguageManager.get("jtable1.header.IsiNota"));
        jtable1.getColumnModel().getColumn(3).setHeaderValue(LanguageManager.get("jtable1.header.Harga"));

        // Refresh header tampilan
        jtable1.getTableHeader().repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Load;
    private javax.swing.JButton Simpan;
    private javax.swing.JButton Tambah;
    private javax.swing.JLabel bahasa;
    private javax.swing.JComboBox<String> cmbBahasa;
    private javax.swing.JLabel harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtable1;
    private javax.swing.JLabel nota;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel tanggal;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIsi;
    private javax.swing.JTextField txtTanggal;
    // End of variables declaration//GEN-END:variables
}
